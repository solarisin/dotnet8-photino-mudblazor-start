@using Microsoft.Extensions.Configuration
@inherits LayoutComponentBase

<CascadingValue Value=false Name="UsePopoverProvider">
    <MudThemeProvider @ref=_mudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/>
</CascadingValue>
<MyMudProviders/>
<MudLayout>
    <MudAppBar Elevation="1" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">StartingPoint</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.DarkMode" Color="Color.Inherit" Edge="Edge.End" OnClick="@((e) => ToggleDarkMode())" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" Width="150px" Variant="@DrawerVariant.Mini" OpenMiniOnHover="true">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="my-2 pt-2">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudThemeProvider? _mudThemeProvider;
    private bool _drawerOpen = false;
    private bool _isDarkMode = true;
    
    // Initialize
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _mudThemeProvider != null)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    
    void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
    }

    private MudTheme _theme = new()
    {
        Palette = new PaletteLight()
        {
            Primary = Colors.Blue.Default,
            Secondary = Colors.Green.Accent4,
            AppbarBackground = Colors.Red.Default,
        },
        PaletteDark = new PaletteDark()
        {
            Primary = Colors.Blue.Lighten1
        }
    };
}

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>